# HTTP Server
server:
  port: @http.port@
  
# Spring properties
spring:
  application:
    name: product-service
  #disable zipkin trace
  zipkin:
    enabled: false
  data:
    mongodb:
      uri: @mongo.uri@
  # spring boot admin client
  boot:
    admin:      
      client:
        url: http://localhost:8080/admin
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest

# Expose all the Actuator endpoints
management:
  endpoints:
    web:
      exposure:        
        include: "*"

# feign error control
hystrix:
  shareSecurityContext: true  
feign:
  hystrix:
    enabled: true
  
# Discovery Server Access
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:1111/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 5   # DO NOT DO THIS IN PRODUCTION

# Auth JWT
jwt:
  header: Authorization
  secret: secret_secret
  expiration: 172800 #seconds
  route:
    authentication:
      path: auth-service
      refresh: refresh

#logueo      
logging:
  level:
    ROOT: DEBUG
    
---

spring:
  profiles: prod
  data:
    mongodb:
      # mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb.default.svc.cluster.local/${MONGO_DATABASE}
      uri: mongodb://test:example@mongodb.default.svc.cluster.local/${MONGO_DATABASE}
  # spring boot admin client
  boot:
    admin:
      client:
         url: http://api-gateway.default.svc.cluster.local:${API_GATEWAY_SERVICE_PORT}/admin         
         instance:
            service-url: http://${PRODUCT_SERVICE_SERVICE_HOST}

# Expose all the Actuator endpoints
management:
  endpoints:
    web:
      exposure:        
        include: "*"  
  endpoint:
    health:
      show-details: ALWAYS
                       
eureka:
  instance:
    # Leave prefer ip address to allow the gateway inside the kubernetes cluster to find this service by it's pod ip
    preferIpAddress: true
    # The hostname of the service, to register the pod and turn it easier for the gateway to find it
    hostname: ${spring.application.name}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-0.eureka.default.svc.cluster.local:1111/eureka,http://eureka-1.eureka.default.svc.cluster.local:1111/eureka,http://eureka-2.eureka.default.svc.cluster.local:1111/eureka